% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate.R
\name{generate_favicon}
\alias{generate_favicon}
\title{Generate favicons from an image}
\usage{
generate_favicon(
  image,
  save_loc,
  api_key = NULL,
  override_type = NULL,
  favicon_design = build_favicon_design(),
  settings = build_settings(),
  versioning = build_versioning()
)
}
\arguments{
\item{image}{character; either a URL to an image or a local path. Type is guessed based on whether the string
contains "http/s" or "www", but can you can override this with the \code{override_type} parameter.}

\item{save_loc}{character; path to a save folder to save the returned images.}

\item{api_key}{character; NULL to use the API set by \code{set_api_key()} or a character string to override
with new value}

\item{favicon_design}{list; the favicon design parameters as an embedded list that will eventually be converted
to json. To help with the building of this complex list, use the \code{build_favicon_design()} function.}

\item{settings}{list; another embedded list of parameters to be passed to the API. To help with this, use the \code{build_settings()} function.}

\item{versioning}{list; an embedded list of versionining parameters to be sent to the API. Help creating this
is provided with the \code{build_versioning()} function.}
}
\value{
path; the path to the saved file is returned invisibly
}
\description{
Using the realfavicongenerator.net API, this function sends a request to the API with the supplied parameters
and downloads the result to a provided save location.
}
\examples{
\dontrun{
generate_favicon(image = "http://test.image.location", save_loc = "Me/MyDownloads",
favicon_design = build_favicon_design(coast = NULL), settings = build_settings(),
versioning = build_versioning())
}
}
